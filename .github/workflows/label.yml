name: Add/Remove Labels

jobs:
  merge_job:
    if: github.event.pull_request.merged == true
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/github-script@v6
      with:
        script: |
          let removeLabelsList = [
            "Pending Merge", 
            "Needs Author Reply", 
            "Needs Review", 
            "Review High Priority", 
            "Needs Second Approval",
            "Blocked by dependency", 
            "Needs a new dev", 
            "squash-merge", 
            "Keep Open", 
            "Stable"
          ];
          async function removeLabel(label) {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: label
            });
          }
          async function addPostMergeComments() {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Maintainers: Please [Sync Translations](https://github.com/ankidroid/Anki-Android/actions/workflows/sync_translations.yml) to produce a commit with only the automated changes from this PR.
              
          Read more about updating strings on the wiki,
          - [localization-administration](https://github.com/ankidroid/Anki-Android/wiki/Development-Guide#localization-administration)
          - [download-localized-strings](https://github.com/ankidroid/Anki-Android/wiki/Development-Guide#download-localized-strings)`
            })
          }
          let result = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          if (result.data !== null && result.data.length > 0) {
            let labels = result.data;
            for (let label of labels) {
                if (removeLabelsList.includes(label.name)) {
                  console.log("Removed: ", label.name);
                  removeLabel(label.name);
                }
                // add post merge comments for 'strings' labeled PR
                if (label.name == "strings") {
                  addPostMergeComments();
                }
            }
          }

on:
  pull_request_target:
    types: [ opened, closed ]
    add_new_contributor_label:
    if: github.event.action == 'opened'
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const creator = context.payload.sender.login
            const opts = github.rest.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: 'all'
            })
            const issues = await github.paginate(opts)
            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }
              if (issue.pull_request) {
                return // creator is already a contributor
              }
            }
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['new contributor']
            })
